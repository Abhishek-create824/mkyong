package com.mkyong.core;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.mkyong.customer.dao.CustomerDAO;
import com.mkyong.customer.model.Customer;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

public class App {
	private static final Logger LOG = Logger.getLogger(App.class.getName());
	
	public static void main(String[] args) {
		Connection conn = null;
		Statement stmt = null;
		try {
			// Register a driver for the H2 database
			Class.forName("org.hsqldb.jdbcDriver");
			// Create a url for accessing the H2 database mkyong
			String url = "jdbc:hsqldb:file:mkyong";
			// user and password to access the database
			String username = "sa";
			String password = "";
			// User the DriverManager to get a Connection to the database
			conn = DriverManager.getConnection(url, username, password);
			// Create a  Statement
			// that is non-updateable, non-scrollable conserning ResultSet
			stmt = conn.createStatement();
			
			int result = stmt.executeUpdate("drop table customer if exists");
			LOG.info("DROP customer = " + result);
			result = stmt.executeUpdate("create table customer (cust_id bigint generated by default as identity, name varchar(100) not null, age integer not null, primary key (cust_id))");
			LOG.info("CREATE customer = " + result);			
		} catch (ClassNotFoundException e) {
			LOG.log(Level.SEVERE, e.getMessage(), e);
		} catch (SQLException e) {
			LOG.log(Level.SEVERE, e.getMessage(), e);
		} finally {
			try {
				// Close the Statement, which also close the ResultSet
				if(stmt!=null)
					stmt.close();
				if(conn!=null)
					conn.close();
			} catch (SQLException e) {
				LOG.log(Level.SEVERE, e.getMessage(), e);
			}
		}
		
		
		@SuppressWarnings("resource")
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"Spring-Module.xml");

		CustomerDAO customerDAO = (CustomerDAO) context.getBean("customerDAO");
		Customer customer = new Customer(1, "mkyong", 28);
		customerDAO.insert(customer);

		Customer customer1 = customerDAO.findByCustomerId(1);
		System.out.println(customer1);

	}
}