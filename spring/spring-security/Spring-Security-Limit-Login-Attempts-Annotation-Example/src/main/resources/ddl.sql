--Data definition language
--mysql ddl
--CREATE  TABLE users (
--  username VARCHAR(45) NOT NULL ,
--  password VARCHAR(45) NOT NULL ,
--  enabled TINYINT NOT NULL DEFAULT 1 ,
--  accountNonExpired TINYINT NOT NULL DEFAULT 1 ,
--  accountNonLocked TINYINT NOT NULL DEFAULT 1 ,
--  credentialsNonExpired TINYINT NOT NULL DEFAULT 1,
--  PRIMARY KEY (username)
--);

--CREATE TABLE user_roles (
--  user_role_id int(11) NOT NULL AUTO_INCREMENT,
--  username varchar(45) NOT NULL,
--  role varchar(45) NOT NULL,
--  PRIMARY KEY (user_role_id),
--  UNIQUE KEY uni_username_role (role,username),
--  KEY fk_username_idx (username),
--  CONSTRAINT fk_username FOREIGN KEY (username) REFERENCES users (username)
--);

--CREATE TABLE user_attempts (
--  id INT(11) NOT NULL AUTO_INCREMENT,
--  username VARCHAR(45) NOT NULL,
--  attempts VARCHAR(45) NOT NULL,
--  lastModified datetime NOT NULL,
--  PRIMARY KEY (id)
--);

--h2 database ddl
DROP INDEX fk_roles_username_idx IF EXISTS;
DROP INDEX fk_attempts_username_idx IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE user_attempts IF EXISTS;
DROP TABLE users IF EXISTS;

CREATE  TABLE users (
	username VARCHAR(45) NOT NULL, 
	password VARCHAR(45) NOT NULL, 
	enabled BOOLEAN NOT NULL, 
	accountNonExpired BOOLEAN NOT NULL,
	accountNonLocked BOOLEAN NOT NULL,
	credentialsNonExpired BOOLEAN NOT NULL,
	PRIMARY KEY (username)
);
CREATE TABLE user_roles (
	role_id BIGINT GENERATED BY DEFAULT AS IDENTITY, 
	username VARCHAR(45) NOT NULL, 
	role VARCHAR(45) NOT NULL, 
	PRIMARY KEY (role_id),
	CONSTRAINT uni_username_role UNIQUE(role,username),
	FOREIGN KEY (username) REFERENCES users (username)
);
CREATE INDEX fk_roles_username_idx on user_roles(username);

CREATE TABLE user_attempts (
	attempt_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
	username VARCHAR(45) NOT NULL,
	attempts INTEGER NOT NULL,
	lastModified DATETIME,
	PRIMARY KEY (attempt_id),
	FOREIGN KEY (username) REFERENCES users (username)
);
CREATE INDEX fk_attempts_username_idx on user_attempts(username);



